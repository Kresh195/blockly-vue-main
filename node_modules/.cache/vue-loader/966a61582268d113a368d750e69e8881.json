{"remainingRequest":"X:\\прога\\blockly-vue-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!X:\\прога\\blockly-vue-main\\src\\components\\Interpreter.vue?vue&type=style&index=0&id=5b38b10c&scoped=true&lang=css&","dependencies":[{"path":"X:\\прога\\blockly-vue-main\\src\\components\\Interpreter.vue","mtime":1629449854969},{"path":"X:\\прога\\blockly-vue-main\\node_modules\\css-loader\\dist\\cjs.js","mtime":1629277995000},{"path":"X:\\прога\\blockly-vue-main\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1629277995000},{"path":"X:\\прога\\blockly-vue-main\\node_modules\\postcss-loader\\src\\index.js","mtime":1629277995000},{"path":"X:\\прога\\blockly-vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629277995000},{"path":"X:\\прога\\blockly-vue-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1629277995000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmludGVycHJldGVyIHsNCiAgYmFja2dyb3VuZDogYXF1YTsNCn0NCg=="},{"version":3,"sources":["Interpreter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA","file":"Interpreter.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"interpreter\">\r\n    <h1>JS-Interpreter Demo</h1>\r\n\r\n    <p>Enter JavaScript code below, then click <em>Parse</em>.  To execute, either\r\n      click <em>Step</em> repeatedly, or click <em>Run</em> once.\r\n      Open your browser's console for errors.</p>\r\n    <p><textarea id=\"code\" spellcheck=\"false\">\r\nvar result = [];\r\nfunction fibonacci(n, output) {\r\n  var a = 1, b = 1, sum;\r\n  for (var i = 0; i &lt; n; i++) {\r\n    output.push(a);\r\n    sum = a + b;\r\n    a = b;\r\n    b = sum;\r\n  }\r\n}\r\nfibonacci(16, result);\r\nalert(result.join(', '));\r\n</textarea><br>\r\n      <button onclick=\"parseButton()\">Parse</button>\r\n      <button onclick=\"stepButton()\" id=\"stepButton\" disabled=\"disabled\">Step</button>\r\n      <button onclick=\"runButton()\" id=\"runButton\" disabled=\"disabled\">Run</button>\r\n    </p>\r\n\r\n    <p><small>\r\n    </small></p>\r\n\r\n    <p>Read the <a href=\"docs.html\">JS-Interpreter documentation</a>.</p>\r\n    <p>Get the <a href=\"https://github.com/NeilFraser/JS-Interpreter\">source code</a>.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nvar compressed = (document.location.search == '?compressed');\r\nif (compressed) {\r\n  document.write('<scr'+'ipt src=\"acorn_interpreter.js\"></scr'+'ipt>');\r\n} else {\r\n  document.write('<scr'+'ipt src=\"acorn.js\"></scr'+'ipt>');\r\n  document.write('<scr'+'ipt src=\"interpreter.js\"></scr'+'ipt>');\r\n}\r\n\r\nvar myInterpreter;\r\nfunction initAlert(interpreter, globalObject) {\r\n  var wrapper = function alert(text) {\r\n    return window.alert(arguments.length ? text : '');\r\n  };\r\n  interpreter.setProperty(globalObject, 'alert',\r\n      interpreter.createNativeFunction(wrapper));\r\n}\r\n\r\nfunction parseButton() {\r\n  var code = document.getElementById('code').value;\r\n  myInterpreter = new Interpreter(code, initAlert);\r\n  disable('');\r\n}\r\n\r\nfunction stepButton() {\r\n  if (myInterpreter.stateStack.length) {\r\n    var node =\r\n        myInterpreter.stateStack[myInterpreter.stateStack.length - 1].node;\r\n    var start = node.start;\r\n    var end = node.end;\r\n  } else {\r\n    var start = 0;\r\n    var end = 0;\r\n  }\r\n  createSelection(start, end);\r\n  try {\r\n    var ok = myInterpreter.step();\r\n  } finally {\r\n    if (!ok) {\r\n      disable('disabled');\r\n    }\r\n  }\r\n}\r\n\r\nfunction runButton() {\r\n  disable('disabled');\r\n  if (myInterpreter.run()) {\r\n    // Async function hit.  There's more code to run.\r\n    disable('');\r\n  }\r\n}\r\n\r\nfunction disable(disabled) {\r\n  document.getElementById('stepButton').disabled = disabled;\r\n  document.getElementById('runButton').disabled = disabled;\r\n}\r\n\r\nfunction createSelection(start, end) {\r\n  var field = document.getElementById('code');\r\n  if (field.createTextRange) {\r\n    var selRange = field.createTextRange();\r\n    selRange.collapse(true);\r\n    selRange.moveStart('character', start);\r\n    selRange.moveEnd('character', end);\r\n    selRange.select();\r\n  } else if (field.setSelectionRange) {\r\n    field.setSelectionRange(start, end);\r\n  } else if (field.selectionStart) {\r\n    field.selectionStart = start;\r\n    field.selectionEnd = end;\r\n  }\r\n  field.focus();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.interpreter {\r\n  background: aqua;\r\n}\r\n</style>"]}]}